{"name":"Optsolve","tagline":"An amateur tool for optimizing linear and linear integer programs.","body":"# optSolve\r\n\r\n\r\nWelcome to the optSolv, an amateur tool for optimizing linear and linear integer programs.\r\nThis tool supports the following:\r\n* _Solving LPs using the Simplex method via dual initialization._\r\n\r\n* _Solving ILPs using the cutting plane method for relaxed ILP._\r\n\r\nThe code has one important class Dictionary.\r\n\r\n# Solver Procedure:\r\nTo solve a linear program, simply construct a new object of class Dictionary whose\r\nconstructor argument is the **file name for the dictionary** representing the linear program, then invoke the method\r\n\r\na. dict.solve() if its a real linear program.\r\n\r\nb. dict.solveILP() if its an integer linear program.\r\n\r\nThe file format is shown below.\r\n\r\nThe solver would return **FEASIBLE**, **UNBOUNDED**, or **the optimal value obtained**.\r\n\r\nFor the format of the input dictionary file, please, refer to dict_format0.png and dict_format1.png, shown below:\r\n![](http://i60.tinypic.com/xdfayc.png)\r\n![](http://i61.tinypic.com/66wv2o.png)\r\n\r\n\r\n\r\n# Pitfalls:\r\n* Due to floating error, the integer solver is not stable for some problems, so it might not converge , be aware !\r\n* For the integer solver, the input dictionary is assumed to be scaled, i.e all A,b,c are integers.\r\n\r\n# Thanks \r\nTo **Prof. Siram and Prof. Runben**, and their awesome linear and integer programming  class.\r\n\r\nHave fun !\r\n\r\nAbdullah Al-Dujaili","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}